#!/usr/bin/env bash 

# Source flag-parsing library
bashful_dir="$(dirname "$(dirname "$(readlink -f "${BASH_SOURCE}")")")"
source "${bashful_dir}/flag-parsing"

# Define function that defines and parses args
# This is useful to encapsulate the parser state
# and prevent it from dirtying the namespace of
# the rest of your script
get_args() {

  bashful::begin
  
  #              name            opts             num_args      required      default    store
  register_opt   'DEFAULT_FLAG'  '-d|--default'   0             'false'       'DEFAULT'  'NEW'
  
  register_opt 'FLAG' '-f|--flag'
  register_opt_value 'FLAG' DEFAULTS   'false'
  register_opt_value 'FLAG' STORE     'true'
  
  register_opt 'FLAG_ARG' '-a|--arg'
  register_opt_value 'FLAG_ARG' NUM_OPT_ARGS  1
  register_opt_value 'FLAG_ARG' REQUIRED      'true'
  register_opt_value 'FLAG_ARG' POST_PARSE    'print_arg'
  
  register_opt 'SINGLE_FLAG' '-s|--single'
  register_opt_value 'SINGLE_FLAG' STORE      'SET'
  register_opt_value 'SINGLE_FLAG' INSTANCES  1
  register_opt_value 'SINGLE_FLAG' POST_PARSE 'print_arg'
  
  register_opt 'MULTI_ARG' '-m|--multi'
  register_opt_value 'MULTI_ARG' NUM_OPT_ARGS   1
  register_opt_value 'MULTI_ARG' INSTANCES    2
  
  register_opt 'LIST_ARG' '-l|--list'
  register_opt_value 'LIST_ARG' NUM_OPT_ARGS  1
  register_opt_value 'LIST_ARG' ACTIONS       'list'
  
  register_opt 'STORE_LIST' '-sl|--store-list'
  register_opt_value 'STORE_LIST' ACTIONS     'list'
  register_opt_value 'STORE_LIST' STORE       'VAL'
  
  register_opt 'INC_ARG' '-i|--i'
  register_opt_value 'INC_ARG' ACTIONS        'increment'
  register_opt_value 'INC_ARG' STORE          2
  register_opt_value 'INC_ARG' INSTANCES      3
  register_opt_value 'INC_ARG' POST_PARSE     'save_to_global'
  
  #             name                num_args      required    default
  register_pos  'SINGLE_POS'        1             'true'      ''
  register_pos  'MULTI_POS'         2             'true'      ''
  register_pos  'INF_POS'           -1            'false'     'abc'
  
  parse "$@" || exit 1
  print_all
  
  bashful::end
}

# Define a series of parse callbacks
print_arg() {
  printf '%s\n%s\n' 'PRINTING' "$@"
}

save_to_global() {
  local -r name="$1"
  local -r val="$3"
  echo "saving to global: $@" 
  
  printf -v "${name}" "${val}"
}

# Call the function to define and parse the args
get_args PARSED "$@"

# Report on the results
echo "INC_ARG: ${INC_ARG}"

