#!/usr/bin/env bash 

# Source flag-parsing library
bashful_dir="$(dirname "$(dirname "$(readlink -f "${BASH_SOURCE}")")")"
source "${bashful_dir}/flag-parsing"

# Define function that defines and parses args
# This is useful to encapsulate the parser state
# and prevent it from dirtying the namespace of
# the rest of your script
get_args() {

  bashful::begin || return 1

  register_opt_bool 'FLAG' '-f|--flag'
  register_opt_with_arg 'FLAG_ARG' '-a|--arg'
  register_opt_count 'COUNT_ARG' '-c|--count'

  register_opt_from_line 'DEFAULT_FLAG' '-d|--default' '
    [DEFAULT]=DEFAULT
    [STORE]=NEW
  '

  register_opt_from_line 'REQ_FLAG_ARG' '-r|--required-flag-arg' '
    [NUM_OPT_ARGS]=1
    [REQUIRED]=true
    [INSTANCES]=1
    [POST_PARSE]=bashful::save_to_global
  '
  
  register_opt_from_line 'SINGLE_FLAG' '-s|--single' '
    [STORE]=SET
    [INSTANCES]=1
  '
  
  register_opt_from_line 'MULTI_ARG' '-m|--multi' '
    [NUM_OPT_ARGS]=1
    [INSTANCES]=2
  '
  
  register_opt_from_line 'LIST_ARG' '-l|--list' '
    [NUM_OPT_ARGS]=1
    [ACTION]=list
  '
  
  register_opt_from_line 'STORE_LIST' '-sl|--store-list' '
    [ACTION]=list
    [STORE]=liz
  '
  
  #             name                num_args      required    default
  register_pos  'SINGLE_POS'        1             'true'      ''
  register_pos  'MULTI_POS'         2             'true'      ''
  register_pos  'INF_POS'           -1            'false'     'abc'
  
  parse "$@" || exit 1
 
  bashful::end || return 1
}

# Call the function to define and parse the args
declare -A PARSED
get_args PARSED "$@" || exit 1

# Report on the results
printf '\n%s\n' 'Contents of PARSED:'
for flag in "${!PARSED[@]}"; do
  printf ' [%s]=%s\n' "${flag}" "${PARSED[${flag}]}"
done

echo
echo "REQ_FLAG_ARG: ${REQ_FLAG_ARG}"

